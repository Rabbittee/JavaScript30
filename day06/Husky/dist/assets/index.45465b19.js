var a=Object.getOwnPropertySymbols;var f=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable;var l=(e,t)=>{var r={};for(var o in e)f.call(e,o)&&t.indexOf(o)<0&&(r[o]=e[o]);if(e!=null&&a)for(var o of a(e))t.indexOf(o)<0&&m.call(e,o)&&(r[o]=e[o]);return r};import{m as c}from"./mapbox-gl.67f9c8d3.js";const g=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function r(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerpolicy&&(s.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?s.credentials="include":n.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(n){if(n.ep)return;n.ep=!0;const s=r(n);fetch(n.href,s)}};g();const y=async e=>{const t=await fetch(e);if(!t.ok)throw new Error(t.statusText);return await t.json()},h=e=>e.map(t=>{const n=t,{rank:r}=n,o=l(n,["rank"]);return typeof o.growth_from_2000_to_2013=="string"&&(o.growth_from_2000_to_2013=Number(o.growth_from_2000_to_2013.slice(0,-1))),typeof o.population=="string"&&(o.population=Number(o.population)),o}),x=(e,t)=>e.reduce((r,o)=>{const n=t(o);return n<r.min&&(r.min=n),n>r.max&&(r.max=n),r},{max:-1/0,min:1/0}),v="pk.eyJ1Ijoic2hpaGNoaWhzdSIsImEiOiJja3lwODhxdTIwN2wxMm5vMXprZXE5aDhuIn0.zHD30PgCppbeuOWqYlzFQQ",p="#43A047",u="#E53935",_="https://gist.githubusercontent.com/Miserlou/c5cd8364bf9b2420bb29/raw/2bf258763cdddd704f8ffd3ea9a3e81d25e2c6f6/cities.json",w=(e,t)=>{t!==void 0&&(e=e.filter(t));const r=e.map(o=>({type:"Feature",geometry:{type:"Point",coordinates:[o.longitude,o.latitude]},properties:o}));return{type:"FeatureCollection",features:r}},d=(e,t,r,o,n=!1)=>{const s=["interpolate",["linear"],["get",e],t.min,r,t.max,o];return n&&s.splice(5,0,0,typeof r=="string"?"#FFFFFF":0),s},F=e=>{const t=x(e,n=>n.population),r=d("population",t,5,20);return{"circle-color":d("growth_from_2000_to_2013",{min:-10,max:30},u,p,!0),"circle-radius":r,"circle-opacity":.7}},b=e=>{const t=e.growth_from_2000_to_2013>0?p:u,r=e.growth_from_2000_to_2013>0?"164 144 128 104 92 144":"164 116 128 156 92 116";return`
<div class="p-2">
  <div class="flex gap-2 items-center">
      <div class="flex flex-col items-center">
        <svg width="60" height="60" fill="#000000" viewBox="0 0 256 256">
          <circle cx="128" cy="128" r="96" fill="${t}" stroke="#FFF" stroke-width="16"></circle>

          <polyline points="${r}" fill="none" stroke="#FFF" stroke-width="16"></polyline>
        </svg>
        <p class="${e.growth_from_2000_to_2013>0?"text-green-600":"text-red-600"}">${e.growth_from_2000_to_2013}%</p>
      </div>
      <div class="flex flex-col">
          <div class="flex flex-row justify-between">
              <p class="text-xl">${e.city}</p>
          </div>
          <p class="text-gray-400 text-sm">${e.state}</p>
          <p class="text-gray-900 text-sm">total\uFF1A${e.population}</p>
      </div>
  </div>
</div>
  `},M=(e,t)=>({enter:n=>{e.getCanvas().style.cursor="pointer";const s=n.features[0].geometry.coordinates.slice(),i=b(n.features[0].properties);for(;Math.abs(n.lngLat.lng-s[0])>180;)s[0]+=n.lngLat.lng>s[0]?360:-360;t.setLngLat(s).setHTML(i).addTo(e)},leave:()=>{e.getCanvas().style.cursor="",t.remove()}}),L=async e=>{c.accessToken=v;const t=new c.Map({container:"map",style:"mapbox://styles/mapbox/dark-v10",bounds:e});return new Promise(r=>{t.on("load",()=>{r(t)})})},E=(e,t)=>(e.addSource("point",{type:"geojson",data:w(t)}),e.addLayer({id:"point",source:"point",type:"circle",paint:F(t)}),e),k=e=>{const t=new c.Popup({closeButton:!1,closeOnClick:!1}),{enter:r,leave:o}=M(e,t);return e.on("mouseenter","point",r),e.on("mouseleave","point",o),e},I=[[-130,49],[-62,23]],P=e=>{const t=document.querySelector('input[name="search"]'),r=o=>{const n=o.target.value;e.setFilter("point",["in",["downcase",n],["downcase",["get","city"]]])};t.addEventListener("input",r)},O=[L(I),y(_).then(h)];Promise.all(O).then(([e,t])=>E(e,t)).then(k).then(P);
